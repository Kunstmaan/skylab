#!/usr/bin/env php
<?php
$startTime = microtime(true);

require_once __DIR__.'/vendor/autoload.php';

const BASE_DIR = __DIR__;

$app = new \Cilex\Application('skylab', '1.0', array('console.class' => 'Kunstmaan\Skylab\Application', 'skylab.starttime' => $startTime));

$app->register(new \Kunstmaan\Skylab\Provider\ProcessProvider());
$app->register(new \Kunstmaan\Skylab\Provider\FallbackConfigServiceProvider(),
    array('config.paths' => array(BASE_DIR."/config/config.yml","/etc/skylab.yml")
));
$app->register(new \Kunstmaan\Skylab\Provider\FileSystemProvider());
$app->register(new \Kunstmaan\Skylab\Provider\ProjectConfigProvider());
$app->register(new \Kunstmaan\Skylab\Provider\SkeletonProvider());
$app->register(new \Kunstmaan\Skylab\Provider\PermissionsProvider());
$app->register(new \Kunstmaan\Skylab\Provider\DialogProvider());
$app->register(new \Kunstmaan\Skylab\Provider\RemoteProvider());
$app->register(new \Cilex\Provider\TwigServiceProvider(), array(
    'twig.path' =>  '/',
));

$app->command(new \Kunstmaan\Skylab\Command\NewProjectCommand());
$app->command(new \Kunstmaan\Skylab\Command\SetPermissionsCommand());
$app->command(new \Kunstmaan\Skylab\Command\CronCommand());
$app->command(new \Kunstmaan\Skylab\Command\MaintenanceCommand());
$app->command(new \Kunstmaan\Skylab\Command\BackupCommand());
$app->command(new \Kunstmaan\Skylab\Command\RemoveProjectCommand());
$app->command(new \Kunstmaan\Skylab\Command\ApplySkeletonCommand());
$app->command(new \Kunstmaan\Skylab\Command\FetchCommand());
$app->command(new \Kunstmaan\Skylab\Command\ShareCommand());

if ('phar:' === substr(__FILE__, 0, 5) || getenv("SU")) {
    $app->command(new \Kunstmaan\Skylab\Command\SelfUpdateCommand());
    $app->command(new \Stecman\Component\Symfony\Console\BashCompletion\CompletionCommand());
}

$app->run();
